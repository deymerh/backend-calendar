{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoutes.jsx","router/PublicRoutes.jsx","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","reportWebVitals.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActive","eventDeleted","eventUpdated","eventsLoaded","startLogout","dispatch","clear","logout","login","user","checkingSinish","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","setLoading","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","console","log","placeholder","onChange","disabled","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","startDate","setStartDate","endDate","setEndDate","titleValid","setTitleValid","modalOpen","ui","eventActive","calendar","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","dispath","id","getState","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelect","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+NAAMA,EAAUC,+CAEVC,EAAoB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAC5CC,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAe,QAAXE,EACKE,MAAMD,GAENC,MAAMD,EAAK,CAChBD,SACAG,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,MAKrBQ,EAAiB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACzCQ,EAAQC,aAAaC,QAAQ,UAAY,GACzCT,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAe,QAAXE,EACKE,MAAMD,EAAK,CAChBE,QAAS,CACP,UAAWK,KAIRN,MAAMD,EAAK,CAChBD,SACAG,QAAS,CACP,eAAgB,mBAChB,UAAWK,GAEbJ,KAAMC,KAAKC,UAAUP,MC/BdY,EACE,kBADFA,EAEG,mBAFHA,EAIK,qBAJLA,EAOG,wBAPHA,EASG,uBATHA,EAWE,kBAXFA,EAYO,6BAZPA,EAaG,wBAbHA,EAcG,wBAdHA,EAiBS,+BAjBTA,EAmBA,eAnBAA,EAsBC,gB,wBCpBDC,EAAgB,WAAkB,IAAjBC,EAAgB,uDAAP,GACrC,OAAOA,EAAOC,KAAI,SAACC,GAAD,mBAAC,eACdA,GADa,IAEhBC,IAAKC,IAAOF,EAAEC,KAAKE,SACnBC,MAAOF,IAAOF,EAAEI,OAAOD,eCmBrBE,EAAc,SAACC,GAAD,MAAY,CAC9BC,KAAMX,EACNY,QAASF,IAQEG,EAAmB,iBAAO,CAAEF,KAAMX,IAoBzCc,EAAe,iBAAO,CAAEH,KAAMX,IA4B9Be,EAAe,SAACL,GAAD,MAAY,CAC/BC,KAAMX,EACNY,QAASF,IAGLM,EAAe,SAACd,GAAD,MAAa,CAChCS,KAAMX,EACNY,QAASV,IC3BEe,EAAc,WACzB,OAAO,SAACC,GACNpB,aAAaqB,QACbD,EAASE,KACTF,ED0B8B,CAAEP,KAAMX,MCvBpCoB,EAAS,iBAAO,CAAET,KAAMX,IAExBqB,EAAQ,SAACC,GAAD,MAAW,CACvBX,KAAMX,EACNY,QAASU,IAGLC,EAAiB,iBAAO,CAAEZ,KAAMX,I,gBC3EzBwB,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAChBC,mBAASD,GADO,mBACrCE,EADqC,KAC7BC,EAD6B,KAEtCC,EAAQ,WACZD,EAAUH,IAENK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BH,EAAU,2BACLD,GADI,kBAENI,EAAOC,KAAOD,EAAOE,UAG1B,MAAO,CAACN,EAAQG,EAAmBD,I,eCNxBK,EAAc,WACzB,IAAMhB,EAAWiB,cADc,EAEDT,oBAAS,GAFR,mBAExBU,EAFwB,KAEfC,EAFe,OAG0Bb,EAAQ,CAC/Dc,OAAQ,sBACRC,UAAW,WALkB,mBAGxBC,EAHwB,KAGPC,EAHO,KAOvBH,GAPuB,KAODE,EAAtBF,QAAQC,EAAcC,EAAdD,UAPe,EAQiCf,EAAQ,CACtEkB,MAAO,UACPC,OAAQ,sBACRC,WAAY,SACZC,WAAY,WAZiB,mBAQxBC,EARwB,KAQJC,EARI,KAcvBL,GAduB,KAcmBI,EAA1CJ,OAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAiBnC,OACE,qBAAKG,UAAU,4BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,yCACA,uBAAMC,SArBM,SAAC7C,GFjBG,IAAC8C,EAAOC,EEkB9Bd,GAAW,GACXjC,EAAEgD,iBACFlC,GFpBuBgC,EEoBHZ,EFpBUa,EEoBFZ,EFnB9B,uCAAO,WAAOrB,GAAP,iBAAAmC,EAAA,+EAEenE,EAAkB,OAAQ,CAAEgE,QAAOC,YAAY,QAF9D,cAEGG,EAFH,gBAGgBA,EAAIC,OAHpB,QAGG9D,EAHH,QAIM+D,IACP1D,aAAa2D,QAAQ,QAAShE,EAAKI,OACnCC,aAAa2D,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDzC,EAASG,EAAM,CACbuC,IAAKnE,EAAKmE,IACV5B,KAAMvC,EAAKuC,SAGb6B,IAAKC,KAAK,QAASrE,EAAKsE,IAAK,SAZ5B,kDAeHC,QAAQC,IAAR,MAfG,0DAAP,wDEoBE5B,GAAW,IAiBL,UACE,qBAAKW,UAAU,aAAf,SACE,uBACErC,KAAK,OACLqC,UAAU,eACVkB,YAAY,SACZlC,KAAK,SACLC,MAAOK,EACP6B,SAAU1B,MAGd,qBAAKO,UAAU,aAAf,SACE,uBACErC,KAAK,WACLqC,UAAU,eACVkB,YAAY,gBACZlC,KAAK,YACLC,MAAOM,EACP4B,SAAU1B,MAGd,qBAAKO,UAAU,aAAf,SACE,uBACErC,KAAK,SACLqC,UAAU,YACVf,MAAM,QACNmC,SAAUhC,YAMlB,sBAAKY,UAAU,wBAAf,UACE,0CACA,uBAAMC,SAjDS,SAAC7C,GAGtB,GAFAiC,GAAW,GACXjC,EAAEgD,iBACER,IAAeC,EAEjB,OADAR,GAAW,GACJwB,IAAKC,KAAK,QAAS,sCAAoC,SFRvC,IAAC9B,EAAMkB,EAAOC,EEUvCjC,GFV0Bc,EEUHU,EFVSQ,EEUFP,EFVSQ,EEUDP,EFTxC,uCAAO,WAAO1B,GAAP,iBAAAmC,EAAA,+EAEenE,EAAkB,gBAAiB,CAAE8C,OAAMkB,QAAOC,YAAY,QAF7E,cAEGG,EAFH,gBAGgBA,EAAIC,OAHpB,QAGG9D,EAHH,QAIM+D,IACP1D,aAAa2D,QAAQ,QAAShE,EAAKI,OACnCC,aAAa2D,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDzC,EAASG,EAAM,CACbuC,IAAKnE,EAAKmE,IACV5B,KAAMvC,EAAKuC,QAEb6B,IAAKC,KAAK,KAAMrE,EAAKsE,IAAK,YAE1BF,IAAKC,KAAK,QAASrE,EAAKsE,IAAK,SAb5B,kDAgBHC,QAAQC,IAAR,MAhBG,0DAAP,wDEUE5B,GAAW,IAyCL,UACE,qBAAKW,UAAU,aAAf,SACE,uBACErC,KAAK,OACLqC,UAAU,eACVkB,YAAY,SACZlC,KAAK,QACLC,MAAOS,EACPyB,SAAUpB,MAGd,qBAAKC,UAAU,aAAf,SACE,uBACErC,KAAK,QACLqC,UAAU,eACVkB,YAAY,SACZlC,KAAK,SACLC,MAAOU,EACPwB,SAAUpB,MAGd,qBAAKC,UAAU,aAAf,SACE,uBACErC,KAAK,WACLqC,UAAU,eACVkB,YAAY,gBACZlC,KAAK,aACLC,MAAOW,EACPuB,SAAUpB,MAId,qBAAKC,UAAU,aAAf,SACE,uBACErC,KAAK,WACLqC,UAAU,eACVkB,YAAY,0BACZlC,KAAK,aACLC,MAAOY,EACPsB,SAAUpB,MAId,qBAAKC,UAAU,aAAf,SACE,uBACErC,KAAK,SACLqC,UAAU,YACVf,MAAM,eACNmC,SAAUhC,kB,QCzHbiC,EAAS,WACpB,IAAMnD,EAAWiB,cACTH,EAASsC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCxC,KAIR,OACE,sBAAKgB,UAAU,kCAAf,UACE,sBAAMA,UAAU,eAAhB,SACGhB,IAEH,wBACEyC,QATS,WACbvD,EAASD,MASL+B,UAAU,yBAFZ,uBCfO0B,EAAW,CACtBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACN1E,MAAO,SACP2E,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXJC,EAAgB,SAAC,GAAe,IAAb9E,EAAY,EAAZA,MAC9B,OACE,gCACE,+BAAOA,EAAM+E,QACb,yCAAY/E,EAAMY,KAAKU,Y,mCCJhB0D,GAAc,iBAAO,CAAE/E,KAAMX,ICOpC2F,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,IAAMC,cAAc,SACpB,IAAMC,GAAM/F,MAASgG,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAG,SAC9BG,GAAY,CAChBlB,MAAO,GACPmB,MAAO,GACPpG,MAAO6F,GAAI9F,SACXF,IAAKoG,GAASlG,UAGHsG,GAAgB,WAAO,IAAD,EACCnF,mBAAS2E,GAAI9F,UADd,mBAC1BuG,EAD0B,KACfC,EADe,OAEHrF,mBAAS+E,GAASlG,UAFf,mBAE1ByG,EAF0B,KAEjBC,EAFiB,OAGGvF,oBAAS,GAHZ,mBAG1BwF,EAH0B,KAGdC,EAHc,KAIzBC,EAAc9C,aAAY,SAAAC,GAAK,OAAIA,EAAM8C,MAAzCD,UACAE,EAAgBhD,aAAY,SAAAC,GAAK,OAAIA,EAAMgD,YAA3CD,YALyB,EAMG5F,mBAASiF,IANZ,mBAM1Ba,EAN0B,KAMdC,EANc,KAQjCC,qBAAU,WAEND,EADEH,GAGYX,MAEf,CAACW,EAAaG,IAEjB,IAAM3F,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B0F,EAAc,2BACTD,GADQ,kBAEVzF,EAAOC,KAAOD,EAAOE,UAGpBf,EAAWiB,cASXwF,EAAa,WACjBzG,ED3D+B,CAAEP,KAAMX,IC4DvCkB,EAASL,KACT4G,EAAcd,KA2BhB,OACE,eAAC,IAAD,CACEiB,OAAQR,EACRS,eAAgBF,EAChBG,MAAOnC,GACPoC,eAAgB,IAChB/E,UAAU,QACVgF,iBAAiB,cANnB,UAQE,6BAAKV,EAAc,kBAAoB,iBACvC,uBACA,uBAAMtE,UAAU,YAAYC,SApCP,SAAC7C,GACxBA,EAAEgD,iBACF,IRF6B1C,EQEvBuH,EAAc3H,IAAOkH,EAAWhH,OAChC0H,EAAY5H,IAAOkH,EAAWnH,KACpC,OAAI4H,EAAYE,cAAcD,GACrBrE,IAAKC,KAAK,QAAS,qDAAsD,SAE9E0D,EAAW/B,MAAM2C,OAAS,EACrBjB,GAAc,IAGrBjG,EADEoG,GRVyB5G,EQWD8G,ERV9B,uCAAO,WAAOa,GAAP,iBAAAhF,EAAA,+EAEezD,EAAe,UAAD,OAAWc,EAAM4H,IAAM5H,EAAO,OAF3D,cAEG4C,EAFH,gBAGgBA,EAAIC,OAHpB,OAGG9D,EAHH,OAIHuE,QAAQC,IAAIxE,GACRA,EAAK+D,GACP6E,EAAQtH,EAAaL,IAErBmD,IAAKC,KAAK,QAASrE,EAAKsE,IAAK,SAR5B,kDAWHC,QAAQC,IAAR,MAXG,0DAAP,uDA9D8B,SAACvD,GAC/B,8CAAO,WAAOQ,EAAUqH,GAAjB,uBAAAlF,EAAA,+DACiBkF,IAAW/D,KAAzBxC,EADH,EACGA,KAAM4B,EADT,EACSA,IADT,kBAGehE,EAAe,SAAUc,EAAO,QAH/C,cAGG4C,EAHH,gBAIgBA,EAAIC,OAJpB,QAIG9D,EAJH,QAKM+D,KACP9C,EAAM4H,GAAK7I,EAAKiB,MAAM4H,GACtB5H,EAAMY,KAAO,CACXkH,IAAK5E,EACL5B,KAAMA,GAERd,EAAST,EAAYC,KAXpB,kDAcHsD,QAAQC,IAAR,MAdG,0DAAP,wDQyEawE,CAAiB,2BACrBjB,GADoB,IAEvBc,IAAI,IAAI5E,MAAOC,UACfrC,KAAM,CACJkH,IAAK,QACLxG,KAAM,cAIZmF,GAAc,QACdQ,MAaE,UACE,sBAAK3E,UAAU,aAAf,UACE,wDACA,cAAC,KAAD,CACEmB,SArDoB,SAAC/D,GAC7B2G,EAAa3G,GACbqH,EAAc,2BAAKD,GAAN,IAAkBhH,MAAOJ,MAoD9B6B,MAAO6E,EACP4B,OAAO,iBACPC,cAAc,oBAGlB,sBAAK3F,UAAU,aAAf,UACE,qDACA,cAAC,KAAD,CACEmB,SA1DkB,SAAC/D,GAC3B6G,EAAW7G,GACXqH,EAAc,2BAAKD,GAAN,IAAkBnH,IAAKD,MAyD5B6B,MAAO+E,EACP4B,QAAS9B,EACT4B,OAAO,iBACPC,cAAc,oBAGlB,uBACA,sBAAK3F,UAAU,aAAf,UACE,mDACA,uBACErC,KAAK,OACLqC,UAAS,wBAAmBkE,GAAc,cAC1ChD,YAAY,uBACZlC,KAAK,QACL6G,aAAa,MACb5G,MAAOuF,EAAW/B,MAClBtB,SAAUrC,IAEZ,uBAAOwG,GAAG,YAAYtF,UAAU,uBAAhC,yCAEF,sBAAKA,UAAU,aAAf,UACE,0BACErC,KAAK,OACLqC,UAAU,eACVkB,YAAY,QACZ4E,KAAK,IACL9G,KAAK,QACLC,MAAOuF,EAAWZ,MAClBzC,SAAUrC,IAEZ,uBAAOwG,GAAG,YAAYtF,UAAU,uBAAhC,yCAEF,yBACErC,KAAK,SACLqC,UAAU,oCAFZ,UAIE,mBAAGA,UAAU,gBACb,qDCrJG+F,GAAY,WACvB,IAAM7H,EAAWiB,cAIjB,OACE,wBACEa,UAAU,sBACVyB,QANoB,WACtBvD,EAASwE,OAGT,SAIE,mBAAG1C,UAAU,mBCVNgG,GAAiB,WAC5B,IAAM9H,EAAWiB,cAIjB,OACE,yBACEa,UAAU,4BACVyB,QANiB,WACnBvD,EV+BF,uCAAO,WAAOA,EAAUqH,GAAjB,mBAAAlF,EAAA,6DACGiF,EAAOC,IAAWhB,SAASD,YAA3BgB,GADH,kBAGe1I,EAAe,UAAD,OAAW0I,GAAM,GAAI,UAHlD,cAGGhF,EAHH,gBAIgBA,EAAIC,OAJpB,QAIG9D,EAJH,QAKM+D,IACPtC,EAASJ,KACT+C,IAAKC,KAAK,KAAMrE,EAAKsE,IAAK,YAE1BF,IAAKC,KAAK,QAASrE,EAAKsE,IAAK,SAT5B,kDAYHC,QAAQC,IAAR,MAZG,0DAAP,0DU5BE,UAIE,mBAAGjB,UAAU,iBACb,qDCCAiG,I,cAAYC,YAAgB5I,MAErB6I,GAAiB,WAC5B,IAAMjI,EAAWiB,cADiB,EAEFT,mBAAS5B,aAAaC,QAAQ,aAAe,SAF3C,mBAE3BqJ,EAF2B,KAEjBC,EAFiB,OAGF/E,aAAY,SAAAC,GAAK,OAAIA,EAAMgD,YAAnDrH,EAH0B,EAG1BA,OAAQoH,EAHkB,EAGlBA,YACR1D,EAAQU,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCZ,IACR8D,qBAAU,WACRxG,EXkCF,uCAAO,WAAOA,GAAP,mBAAAmC,EAAA,sEACazD,EAAe,UAD5B,cACC0D,EADD,gBAEcA,EAAIC,OAFlB,OAEC9D,EAFD,OAGCS,EAASD,EAAcR,EAAKS,QAClCgB,EAASF,EAAad,IAJjB,2CAAP,yDWjCG,CAACgB,IAyBJ,OACE,sBAAK8B,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEiG,UAAWA,GACX/I,OAAQA,EACRoJ,cAAc,QACdC,YAAY,MACZzB,MAAO,CAAE0B,OAAQ,OACjB9E,SAAUA,EACV+E,gBApBkB,SAAC/I,EAAOF,EAAOH,EAAKqJ,GAQ1C,MAAO,CAAE5B,MAPK,CACZ6B,gBAAkB/F,IAAQlD,EAAM4H,GAAM,UAAY,UAClDsB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAeLC,WAAY,CAAEtJ,MAAO8E,GACrByE,mBA5BgB,SAAC7J,GACrBc,EAASwE,OA4BLwE,cApCgB,SAAC9J,GACrBc,EXEsC,CACxCP,KAAMX,EACNY,QWJ0BR,KAoCpB+J,OAlCe,SAAC/J,GACpBiJ,EAAYjJ,GACZN,aAAa2D,QAAQ,WAAYrD,IAiC7BgK,KAAMhB,EACNiB,aA7Be,SAACjK,GACpBc,EAASL,MA6BLyJ,YAAY,IAEd,cAAC,GAAD,IACA,cAAC,GAAD,IAEEhD,GACE,cAAC,GAAD,Q,SCrEGiD,GAAe,SAAC,GAItB,IAHLC,EAGI,EAHJA,gBACWC,EAEP,EAFJC,UACGC,EACC,gDACJ,OACE,cAAC,IAAD,2BAAWA,GAAX,IACED,UAAW,SAACE,GAAD,OACRJ,EACI,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gBCVbC,GAAc,SAAC,GAIrB,IAHLN,EAGI,EAHJA,gBACUC,EAEN,EAFJC,UACGC,EACC,gDACJ,OACE,cAAC,IAAD,2BAAYA,GAAZ,IACED,UAAW,SAACE,GAAD,OACRJ,EACE,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAgBG,SCDdG,GAAY,WACvB,IAAM7J,EAAWiB,cADY,EAEHmC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA7CwG,EAFqB,EAErBA,SAAUpH,EAFW,EAEXA,IAIlB,OAHA8D,qBAAU,WACRxG,Eb8BF,uCAAO,WAAOA,GAAP,iBAAAmC,EAAA,sEACazD,EAAe,cAD5B,cACC0D,EADD,gBAEcA,EAAIC,OAFlB,QAEC9D,EAFD,QAGI+D,IACP1D,aAAa2D,QAAQ,QAAShE,EAAKI,OACnCC,aAAa2D,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDzC,EAASG,EAAM,CACbuC,IAAKnE,EAAKmE,IACV5B,KAAMvC,EAAKuC,SAGbd,EAASK,KAXN,2CAAP,yDa7BG,CAACL,IACA8J,EACM,2CAGR,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,GAAD,CACEC,OAAK,EACLT,kBAAmB5G,EACnBsH,KAAK,SACLR,UAAWxI,IAEb,cAAC,GAAD,CACEsI,kBAAmB5G,EACnBqH,OAAK,EACLC,KAAK,IACLR,UAAWvB,KAEb,cAAC,IAAD,CAAU0B,GAAG,c,kBCpCjBpJ,GAAe,CACnBuJ,UAAU,EACVpH,IAAK,KACL5B,KAAM,M,SCHFP,GAAe,CACnBvB,OAAQ,GAaRoH,YAAa,MCdT7F,GAAe,CACnB2F,WAAW,GCEA+D,GAAcC,aAAgB,CACzC/D,GDDuB,WAAmC,IAAlC9C,EAAiC,uDAAzB9C,GAAc4J,EAAW,uCACzD,OAAQA,EAAO1K,MACb,KAAKX,EACH,OAAO,2BAAKuE,GAAZ,IAAmB6C,WAAW,IAChC,KAAKpH,EACH,OAAO,2BAAKuE,GAAZ,IAAmB6C,WAAW,IAChC,QACE,OAAO7C,ICLXgD,SFW6B,WAAmC,IAAlChD,EAAiC,uDAAzB9C,GAAc4J,EAAW,uCAC/D,OAAQA,EAAO1K,MACb,KAAKX,EACH,OAAO,2BAAKuE,GAAZ,IAAmB+C,YAAa+D,EAAOzK,UACzC,KAAKZ,EACH,OAAO,2BAAKuE,GAAZ,IAAmBrE,OAAO,GAAD,oBAAMqE,EAAMrE,QAAZ,CAAoBmL,EAAOzK,YACtD,KAAKZ,EACH,OAAO,2BAAKuE,GAAZ,IAAmB+C,YAAa,OAClC,KAAKtH,EACH,OAAO,2BACFuE,GADL,IAEErE,OAAQqE,EAAMrE,OAAOC,KAAI,SAAAC,GAAC,OACvBA,EAAEkI,KAAO+C,EAAOzK,QAAQ0H,GAAM+C,EAAOzK,QAAUR,OAEtD,KAAKJ,EACH,OAAO,2BACFuE,GADL,IAEErE,OAAQqE,EAAMrE,OAAOoL,QAAO,SAAAlL,GAAC,OAC1BA,EAAEkI,KAAO/D,EAAM+C,YAAYgB,MAC9BhB,YAAa,OAEjB,KAAKtH,EACH,OAAO,2BACFuE,GADL,IAEErE,OAAO,aAAKmL,EAAOzK,WAEvB,KAAKZ,EACH,OAAO,eACFyB,IAEP,QACE,OAAO8C,IEzCXC,KHAyB,WAAmC,IAAlCD,EAAiC,uDAAzB9C,GAAc4J,EAAW,uCAC3D,OAAQA,EAAO1K,MACb,KAAKX,EACH,OAAO,2BACFuE,GADL,IAEEyG,UAAU,GACPK,EAAOzK,SAEd,KAAKZ,EACH,OAAO,2BACFuE,GADL,IAEEyG,UAAU,IAEd,KAAKhL,EACH,MAAO,CACLgL,UAAU,GAEd,QACE,OAAOzG,MIrBPgH,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACnBT,GACAI,GACEM,aAAgBC,QCNPC,GAAc,WACzB,OACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,OCKSK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.efb04a15.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  if (method === 'GET') {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n};\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n  const token = localStorage.getItem('token') || '';\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}\r\nexport {\r\n  fetchWithoutToken,\r\n  fetchWithToken\r\n}","export const types = {\r\n  uiOpenModal: '[UI] open modal',\r\n  uiCloseModal: '[UI] close modal',\r\n\r\n  eventSetActive: '[event] Set Active',\r\n\r\n  eventStartAddNew: '[event] Start Add New',\r\n  eventsLoaded: '[event] Events Loaded',\r\n\r\n  eventsLogout: '[event] Event Logout',\r\n\r\n  eventAddNew: '[event] Add New',\r\n  eventClearActive: '[event] Clear Active Event',\r\n  eventUpdated: '[event] Event Updated',\r\n  eventDeleted: '[event] Event Deleted',\r\n\r\n  authChecking: '[Auth] Checking login state',\r\n  authCheckingFinish: '[Auth] Checking login finish',\r\n  authStartLogin: '[Auth] Start login',\r\n  authLogin: '[Auth] Login',\r\n  authStartRegister: '[Auth] Start register',\r\n  authStartTokenRenew: '[Auth] Start totken Renew',\r\n  authLogout: '[Auth] Logout',\r\n};","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map((e) => ({\r\n    ...e,\r\n    end: moment(e.end).toDate(),\r\n    start: moment(e.start).toDate(),\r\n  }));\r\n};","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { name, uid } = getState().auth;\r\n    try {\r\n      const res = await fetchWithToken('events', event, 'POST');\r\n      const body = await res.json();\r\n      if (body.ok) {\r\n        event.id = body.event.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name\r\n        }\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n});\r\n\r\nexport const eventClearActive = () => ({ type: types.eventClearActive });\r\n\r\nexport const eventStartDeleted = () => {\r\n  return async (dispatch, getState) => {\r\n    const { id } = getState().calendar.eventActive;\r\n    try {\r\n      const res = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n      const body = await res.json();\r\n      if (body.ok) {\r\n        dispatch(eventDeleted());\r\n        Swal.fire('Ok', body.msg, 'success');\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const startEventsLoaded = () => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithToken('events');\r\n    const body = await res.json();\r\n    const events = prepareEvents(body.events);\r\n    dispatch(eventsLoaded(events));\r\n  };\r\n};\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispath) => {\r\n    try {\r\n      const res = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n      const body = await res.json();\r\n      console.log(body);\r\n      if (body.ok) {\r\n        dispath(eventUpdated(event));\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n});\r\n\r\nconst eventsLoaded = (events) => ({\r\n  type: types.eventsLoaded,\r\n  payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventsLogout });","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n      const body = await res.json();\r\n      if (body.ok) {\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(login({\r\n          uid: body.uid,\r\n          name: body.name\r\n        }));\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\nexport const startRegister = (name, email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetchWithoutToken('auth/register', { name, email, password }, 'POST');\r\n      const body = await res.json();\r\n      if (body.ok) {\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(login({\r\n          uid: body.uid,\r\n          name: body.name\r\n        }));\r\n        Swal.fire('Ok', body.msg, 'success');\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithToken('auth/renew');\r\n    const body = await res.json();\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n    } else {\r\n      dispatch(checkingSinish());\r\n    }\r\n  }\r\n}\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n    dispatch(eventLogout());\r\n  }\r\n}\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n});\r\n\r\nconst checkingSinish = () => ({ type: types.authCheckingFinish });","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  }\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n  return [values, handleInputChange, reset];\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './loginScreen.css';\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [formLoginValues, handleLoginInputChange, reset] = useForm({\r\n    lEmail: 'deymerh@hotmail.com',\r\n    lPassword: '123456'\r\n  });\r\n  const { lEmail, lPassword } = formLoginValues;\r\n  const [formRegisterValues, handleRegisterInputChange, reset2] = useForm({\r\n    rName: 'Antonio',\r\n    rEmail: 'deyer1227@gmail.com',\r\n    rPassword1: '123456',\r\n    rPassword2: '123456'\r\n  });\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n  const handleLogin = (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n    setLoading(false);\r\n  }\r\n  const handleRegister = (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    if (rPassword1 !== rPassword2) {\r\n      setLoading(false);\r\n      return Swal.fire('Error', 'Las contraseñas debe ser iguales', 'error');\r\n    }\r\n    dispatch(startRegister(rName, rEmail, rPassword1));\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Login\"\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Crear cuenta\"\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector(state => state.auth);\r\n  const logout = () => {\r\n    dispatch(startLogout());\r\n  }\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">\r\n        {name}\r\n      </span>\r\n      <button\r\n        onClick={logout}\r\n        className=\"btn btn-outline-danger\"\r\n      >\r\n        Salir\r\n      </button>\r\n    </div>\r\n  )\r\n};\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  return (\r\n    <div>\r\n      <span>{event.title}</span>\r\n      <strong> - {event.user.name}</strong>\r\n    </div>\r\n  )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n  const [startDate, setStartDate] = useState(now.toDate());\r\n  const [endDate, setEndDate] = useState(nowPlus1.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n  const { modalOpen } = useSelector(state => state.ui);\r\n  const { eventActive } = useSelector(state => state.calendar);\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  useEffect(() => {\r\n    if (eventActive) {\r\n      setFormValues(eventActive);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [eventActive, setFormValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    })\r\n  };\r\n  const dispatch = useDispatch();\r\n  const handleStartDateChange = (e) => {\r\n    setStartDate(e);\r\n    setFormValues({ ...formValues, start: e });\r\n  }\r\n  const handleEndDateChange = (e) => {\r\n    setEndDate(e);\r\n    setFormValues({ ...formValues, end: e });\r\n  }\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActive());\r\n    setFormValues(initEvent);\r\n  }\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const momentStart = moment(formValues.start);\r\n    const momentEnd = moment(formValues.end);\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire('Error', 'La fecha final debe ser mayor a la fecha de inicio', 'error');\r\n    }\r\n    if (formValues.title.trim() < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n    if (eventActive) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew({\r\n        ...formValues,\r\n        id: new Date().getTime(),\r\n        user: {\r\n          _id: '12345',\r\n          name: 'Deymer'\r\n        }\r\n      }));\r\n    }\r\n    setTitleValid(true);\r\n    closeModal();\r\n  }\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1>{eventActive ? 'Editando evento' : 'Nuevo evento'}</h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={startDate}\r\n            format=\"y-MM-dd h:mm a\"\r\n            amPmAriaLabel=\"Select AM/PM\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={endDate}\r\n            minDate={startDate}\r\n            format=\"y-MM-dd h:mm a\"\r\n            amPmAriaLabel=\"Select AM/PM\"\r\n          />\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={formValues.title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={formValues.notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span>Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleOpenModal = () => {\r\n    dispatch(uiOpenModal());\r\n  }\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary fab\"\r\n      onClick={handleOpenModal}\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDeleted());\r\n  };\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger fab-danger\"\r\n      onClick={handleDelete}\r\n    >\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span>Borrar evento</span>\r\n    </button>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { momentLocalizer, Calendar } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, startEventsLoaded } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n  const { events, eventActive } = useSelector(state => state.calendar);\r\n  const { uid } = useSelector(state => state.auth);\r\n  useEffect(() => {\r\n    dispatch(startEventsLoaded())\r\n  }, [dispatch]);\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  };\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n  const onSelectSlot = (e) => {\r\n    dispatch(eventClearActive());\r\n  };\r\n  const evenStyleGetter = (event, start, end, isSelect) => {\r\n    const style = {\r\n      backgroundColor: (uid === event.id) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white'\r\n    }\r\n    return { style }\r\n  }\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: '500' }}\r\n        messages={messages}\r\n        eventPropGetter={evenStyleGetter}\r\n        components={{ event: CalendarEvent }}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n      />\r\n      <CalendarModal />\r\n      <AddNewFab />\r\n      {\r\n        eventActive && (\r\n          <DeleteEventFab />\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route {...rest}\r\n      component={(props) => (\r\n        (isAuthenticated)\r\n          ? (<Component {...props} />)\r\n          : (<Redirect to=\"/login\" />)\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component:Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route { ...rest }\r\n      component={(props)=>(\r\n        (isAuthenticated)\r\n        ? (<Redirect to=\"/\" />)\r\n        : (<Component { ...props}/>)\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoutes';\r\nimport { PublicRoute } from './PublicRoutes';\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth);\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n  if (checking) {\r\n    return (<h4>Espere...</h4>);\r\n  }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            isAuthenticated={!!uid}\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n          />\r\n          <PrivateRoute\r\n            isAuthenticated={!!uid}\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  uid: null,\r\n  name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n        ...action.payload\r\n      }\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  events: [\r\n    //   {\r\n    //   id: new Date().getTime(),\r\n    //   title: 'Mi cumpleaños',\r\n    //   start: moment().toDate(),\r\n    //   end: moment().add(2, 'hours').toDate(),\r\n    //   bgColor: '#fafafa',\r\n    //   user: {\r\n    //     _id: '12345',\r\n    //     name: 'Deymer'\r\n    //   }\r\n    // }\r\n  ],\r\n  eventActive: null\r\n}\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return { ...state, eventActive: action.payload }\r\n    case types.eventAddNew:\r\n      return { ...state, events: [...state.events, action.payload] }\r\n    case types.eventClearActive:\r\n      return { ...state, eventActive: null }\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(e =>\r\n          (e.id === action.payload.id) ? action.payload : e)\r\n      }\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(e =>\r\n          (e.id !== state.eventActive.id)),\r\n        eventActive: null\r\n      }\r\n    case types.eventsLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      }\r\n    case types.eventsLogout:\r\n      return {\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  modalOpen: false\r\n}\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return { ...state, modalOpen: true }\r\n    case types.uiCloseModal:\r\n      return { ...state, modalOpen: false }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer\r\n});","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);","import { Provider } from 'react-redux';\nimport { AppRouter } from './router/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { CalendarApp } from './CalendarApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}